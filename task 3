#include <windows.h>
#include <iostream>

int main() {
   
    STARTUPINFO si = {0};
    PROCESS_INFORMATION pi = {0};

    si.cb = sizeof(STARTUPINFO);

    
    LPCSTR command = "notepad.exe";

 
    if (!CreateProcessA(
            NULL,              // Назва програми
            (LPSTR)command,    // Команда
            NULL,              // Атрибут безпеки для процесу
            NULL,              // Атрибут безпеки для потоку
            FALSE,             // Успадкування дескрипторів
            0,                 // Прапори створення
            NULL,              // Довкілля
            NULL,              // Поточний каталог
            &si,               // Структура STARTUPINFO
            &pi)) {            // Структура PROCESS_INFORMATION
        std::cerr << "Не вдалося створити процес. Код помилки: " << GetLastError() << std::endl;
        return 1;
    }

    std::cout << "Дочірній процес створено. Очікуємо завершення..." << std::endl;

    
    const DWORD TIMEOUT = 10000; // 10 секунд у мілісекундах
    DWORD waitResult = WaitForSingleObject(pi.hProcess, TIMEOUT);

    if (waitResult == WAIT_TIMEOUT) {
        std::cerr << "Процес виконується занадто довго. Завершуємо процес..." << std::endl;
        if (!TerminateProcess(pi.hProcess, 1)) {
            std::cerr << "Не вдалося завершити процес. Код помилки: " << GetLastError() << std::endl;
        } else {
            std::cout << "Процес успішно завершено через перевищення часу." << std::endl;
        }
    } else if (waitResult == WAIT_FAILED) {
        std::cerr << "Помилка очікування завершення процесу. Код помилки: " << GetLastError() << std::endl;
    } else {
       
        DWORD exitCode;
        if (!GetExitCodeProcess(pi.hProcess, &exitCode)) {
            std::cerr << "Не вдалося отримати код завершення процесу. Код помилки: " << GetLastError() << std::endl;
        } else {
           
            if (exitCode == 0) {
                std::cout << "Процес успішно завершився. Код завершення: " << exitCode << std::endl;
            } else {
                std::cerr << "Процес завершився з помилкою. Код завершення: " << exitCode << std::endl;
            }
        }
    }

  
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);

    return 0;
}
